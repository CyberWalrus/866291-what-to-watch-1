// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VideoScreen correctly renders after relaunch 1`] = `
<Fragment>
  <div
    className="player"
    style={
      Object {
        "background": "url(https://es31-server.appspot.com/wtw/static/film/background/Shutter_Island.jpg) no-repeat center center fixed",
        "backgroundSize": "cover",
        "zIndex": 100,
      }
    }
  >
    <VideoPlayer
      isPlaying={false}
      onSendVideoRef={
        [MockFunction] {
          "calls": Array [
            Array [
              null,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      options={
        Object {
          "height": "100%",
          "isControls": false,
          "isLoop": false,
          "isMuted": false,
          "width": "100%",
        }
      }
      posterSrc="https://es31-server.appspot.com/wtw/static/film/background/Shutter_Island.jpg"
      videoSrc="http://peach.themazzone.com/durian/movies/sintel-1024-surround.mp4"
    />
    <button
      className="player__exit"
      onClick={
        [MockFunction] {
          "calls": Array [
            Array [
              null,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      type="button"
    >
      Exit
    </button>
    <div
      className="player__controls"
    >
      <div
        className="player__controls-row"
      >
        <div
          className="player__time"
        >
          <progress
            className="player__progress"
            max="100"
            value={0}
          />
          <div
            className="player__toggler"
            onMouseDown={
              [MockFunction] {
                "calls": Array [
                  Array [
                    null,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
            style={
              Object {
                "left": "0%",
              }
            }
          >
            Toggler
          </div>
        </div>
        <div
          className="player__time-value"
        >
          00:00
        </div>
      </div>
      <div
        className="player__controls-row"
      >
        <button
          className="player__play"
          onClick={
            [MockFunction] {
              "calls": Array [
                Array [
                  null,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          type="button"
        >
          <svg
            height="19"
            viewBox="0 0 19 19"
            width="19"
          >
            <use
              xlinkHref="#play-s"
            />
          </svg>
          <span>
            Play
          </span>
        </button>
        <div
          className="player__name"
        >
          Shutter Island
        </div>
        <button
          className="player__full-screen"
          onClick={
            [MockFunction] {
              "calls": Array [
                Array [
                  null,
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          type="button"
        >
          <svg
            height="27"
            viewBox="0 0 27 27"
            width="27"
          >
            <use
              xlinkHref="#full-screen"
            />
          </svg>
          <span>
            Full screen
          </span>
        </button>
      </div>
    </div>
  </div>
</Fragment>
`;
